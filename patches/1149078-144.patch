diff --git a/core/misc/states.es6.js b/core/misc/states.es6.js
index b45e1e0504..2e9832dc82 100644
--- a/core/misc/states.es6.js
+++ b/core/misc/states.es6.js
@@ -159,6 +159,24 @@
       // The "reference" variable is a comparison function.
       return reference(value);
     },
+    Array(reference, value) {
+      // Make sure value is an array.
+      if (!Array.isArray(value)) {
+        return false;
+      }
+      // Convert all comparisons to strings for indexOf to work with integers
+      // comparing to strings.
+      reference = reference.map(String);
+      value = value.map(String);
+      // We iterate through each value provided in the reference. If all of them
+      // exist in value array, we return true. Otherwise return false.
+      Object.entries(reference).forEach((key) => {
+        if (value.indexOf(reference[key]) === -1) {
+          return false;
+        }
+        return true;
+      });
+    },
     Number(reference, value) {
       // If "reference" is a number and "value" is a string, then cast
       // reference as a string before applying the strict comparison in
diff --git a/core/misc/states.js b/core/misc/states.js
index e827a7baa8..28ef63fce9 100644
--- a/core/misc/states.js
+++ b/core/misc/states.js
@@ -67,6 +67,27 @@
     Function: function Function(reference, value) {
       return reference(value);
     },
+    Array: function (_Array) {
+      function Array(_x, _x2) {
+        return _Array.apply(this, arguments);
+      }
+      Array.toString = function () {
+        return _Array.toString();
+      };
+      return Array;
+    }(function (reference, value) {
+      if (!Array.isArray(value)) {
+        return false;
+      }
+      reference = reference.map(String);
+      value = value.map(String);
+      Object.entries(reference).forEach(function (key) {
+        if (value.indexOf(reference[key]) === -1) {
+          return false;
+        }
+        return true;
+      });
+    }),
     Number: function Number(reference, value) {
       return typeof value === 'string' ? _compare2(reference.toString(), value) : _compare2(reference, value);
     }
