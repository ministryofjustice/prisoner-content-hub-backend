diff --git a/js/linkit.autocomplete.js b/js/linkit.autocomplete.js
index 63a7c8b..f49f5cc 100644
--- a/js/linkit.autocomplete.js
+++ b/js/linkit.autocomplete.js
@@ -89,7 +89,7 @@
       }
     }
 
-    event.target.value = ui.item.path;
+    event.target.value = ui.item.alias ? ui.item.alias : ui.item.path;
 
     return false;
   }
diff --git a/src/Element/Linkit.php b/src/Element/Linkit.php
index 7824dd8..8f650d2 100644
--- a/src/Element/Linkit.php
+++ b/src/Element/Linkit.php
@@ -86,6 +86,21 @@ class Linkit extends FormElement {
    * {@inheritdoc}
    */
   public static function preRenderLinkitElement($element) {
+    if (empty($element['#default_value']) || empty($element['#value'])) {
+      return Textfield::preRenderTextfield($element);
+    }
+    if ($element['#value'][0] !== '/') {
+      return Textfield::preRenderTextfield($element);
+    }
+    if (\Drupal::moduleHandler()->moduleExists('path_alias')) {
+      /** @var \Drupal\path_alias\AliasManagerInterface $aliasManager */
+      $aliasManager = \Drupal::service('path_alias.manager');
+      $alias = $aliasManager->getAliasByPath($element['#value']);
+      if ($alias !== $element['#value']) {
+        $element['#default_value'] = $alias;
+        $element['#value'] = $alias;
+      }
+    }
     return Textfield::preRenderTextfield($element);
   }
 
diff --git a/src/Plugin/Linkit/Matcher/EntityMatcher.php b/src/Plugin/Linkit/Matcher/EntityMatcher.php
index 76ba3b3..2374805 100644
--- a/src/Plugin/Linkit/Matcher/EntityMatcher.php
+++ b/src/Plugin/Linkit/Matcher/EntityMatcher.php
@@ -429,7 +429,8 @@ class EntityMatcher extends ConfigurableMatcherBase {
       ->setEntityTypeId($entity->getEntityTypeId())
       ->setSubstitutionId($this->configuration['substitution_type'])
       ->setStatus($this->buildStatus($entity))
-      ->setPath($this->buildPath($entity));
+      ->setPath($this->buildPath($entity))
+      ->setAlias($this->buildPath($entity));
 
     return $suggestion;
   }
@@ -494,7 +495,7 @@ class EntityMatcher extends ConfigurableMatcherBase {
    *   The path for this entity.
    */
   protected function buildPath(EntityInterface $entity) {
-    $path = $entity->toUrl('canonical', ['path_processing' => FALSE])->toString();
+    $path = $entity->toUrl('canonical')->toString();
     // For media entities, check if standalone URLs are allowed. If not, then
     // strip '/edit' from the end of the canonical URL returned
     // by $entity->toUrl().
diff --git a/src/Suggestion/EntitySuggestion.php b/src/Suggestion/EntitySuggestion.php
index bd55db3..e1a5c33 100644
--- a/src/Suggestion/EntitySuggestion.php
+++ b/src/Suggestion/EntitySuggestion.php
@@ -7,6 +7,13 @@ namespace Drupal\linkit\Suggestion;
  */
 class EntitySuggestion extends DescriptionSuggestion {
 
+  /**
+   * The entity's path alias.
+   *
+   * @var string
+   */
+  protected $alias;
+
   /**
    * The entity uuid.
    *
@@ -28,6 +35,19 @@ class EntitySuggestion extends DescriptionSuggestion {
    */
   protected $substitutionId;
 
+  /**
+   * Sets the path alias.
+   *
+   * @param string $alias
+   *   The path alias.
+   *
+   * @return $this
+   */
+  public function setAlias($alias) {
+    $this->alias = $alias;
+    return $this;
+  }
+
   /**
    * Sets the entity uuid.
    *
@@ -76,6 +96,7 @@ class EntitySuggestion extends DescriptionSuggestion {
       'entity_uuid' => $this->entityUuid,
       'entity_type_id' => $this->entityTypeId,
       'substitution_id' => $this->substitutionId,
+      'alias' => $this->alias,
     ];
   }
 
