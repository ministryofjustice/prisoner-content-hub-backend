diff --git a/src/Controller/S3CorsUploadAjaxController.php b/src/Controller/S3CorsUploadAjaxController.php
index cd838be..b01010e 100644
--- a/src/Controller/S3CorsUploadAjaxController.php
+++ b/src/Controller/S3CorsUploadAjaxController.php
@@ -74,12 +74,6 @@ class S3CorsUploadAjaxController extends ControllerBase {
     $bucket = $adapter->getBucket();
     $destination = $adapter->applyPathPrefix(StreamWrapperManager::getTarget($post['destination']));
 
-    $options = [
-      ['acl' => $post['acl']],
-      ['bucket' => $bucket],
-      ['starts-with', '$key', $destination . '/'],
-    ];
-
     // Retrieve the file name and build the URI.
     // Destination does not contain a prefix as it is applied by the fly system.
     $uri = \Drupal::service('file_system')->createFilename($post['filename'], $post['destination']);
@@ -88,7 +82,7 @@ class S3CorsUploadAjaxController extends ControllerBase {
 
     // Create a temporary file to return with a file ID in the response.
     $file = File::create([
-      'uri' => $post['key'],
+      'uri' => $uri,
       'filesize' => $post['filesize'],
       'filename' => $post['filename'],
       'filemime' => $post['filemime'],
@@ -96,6 +90,16 @@ class S3CorsUploadAjaxController extends ControllerBase {
     ]);
     $file->save();
 
+    // Match Drupal DB mimetype with aws Content-Type Metadata. 
+    $post['Content-Type'] = $file->getMimeType();
+
+    $options = [
+      ['acl' => $post['acl']],
+      ['bucket' => $bucket],
+      ['starts-with', '$key', $destination . '/'],
+      ['starts-with', '$Content-Type', $post['Content-Type']],
+    ];
+
     // Remove values not necessary for the request to Amazon.
     unset($post['destination']);
     unset($post['filename']);
