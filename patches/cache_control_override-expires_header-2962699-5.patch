diff --git a/cache_control_override.services.yml b/cache_control_override.services.yml
index 5576871..c3d803f 100644
--- a/cache_control_override.services.yml
+++ b/cache_control_override.services.yml
@@ -1,6 +1,8 @@
 services:
   cache_control_override.cache_control_override_subscriber:
     class: Drupal\cache_control_override\EventSubscriber\CacheControlOverrideSubscriber
+    arguments:
+      - '@datetime.time'
     tags:
       - { name: event_subscriber }
   cache_control_override.page_cache_response_policy.deny_on_cache_override:
diff --git a/src/EventSubscriber/CacheControlOverrideSubscriber.php b/src/EventSubscriber/CacheControlOverrideSubscriber.php
index 6ce37d8..b3a76f5 100644
--- a/src/EventSubscriber/CacheControlOverrideSubscriber.php
+++ b/src/EventSubscriber/CacheControlOverrideSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cache_control_override\EventSubscriber;
 
+use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
@@ -13,6 +14,23 @@ use Symfony\Component\EventDispatcher\EventSubscriberInterface;
  */
 class CacheControlOverrideSubscriber implements EventSubscriberInterface {
 
+  /**
+   * The time service.
+   *
+   * @var \Drupal\Component\Datetime\TimeInterface
+   */
+  protected $timeService;
+
+  /**
+   * ProductHelper constructor.
+   *
+   * @param \Drupal\Component\Datetime\TimeInterface $time_service
+   *   The time service.
+   */
+  public function __construct(TimeInterface $time_service) {
+    $this->timeService = $time_service;
+  }
+
   /**
    * Overrides cache control header if any of override methods are enabled.
    *
@@ -44,6 +62,11 @@ class CacheControlOverrideSubscriber implements EventSubscriberInterface {
     // the max-age.
     if ($max_age != Cache::PERMANENT) {
       $response->headers->set('Cache-Control', 'public, max-age=' . $max_age);
+      // Set expires.
+      $expires_timestamp = $this->timeService->getRequestTime() + $max_age;
+      $expires_datetime = new \DateTime();
+      $expires_datetime->setTimestamp($expires_timestamp);
+      $response->setExpires($expires_datetime);
     }
   }
 
