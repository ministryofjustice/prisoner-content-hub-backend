diff --git a/computed_breadcrumbs.module b/computed_breadcrumbs.module
index 54e10b1..5073600 100644
--- a/computed_breadcrumbs.module
+++ b/computed_breadcrumbs.module
@@ -5,6 +5,7 @@
  * Defines the hooks for computed_breadcrumbs.
  */
 
+use Drupal\Core\Entity\ContentEntityTypeInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ -14,7 +15,7 @@ use Drupal\Core\Field\FieldStorageDefinitionInterface;
  */
 function computed_breadcrumbs_entity_base_field_info(EntityTypeInterface $entity_type) {
   $fields = [];
-  if ($entity_type->id() === 'node') {
+  if ($entity_type instanceof ContentEntityTypeInterface) {
     $fields['breadcrumbs'] = BaseFieldDefinition::create('computed_breadcrumbs')
       ->setName('breadcrumbs')
       ->setLabel(t('Breadcrumbs'))
@@ -24,6 +25,7 @@ function computed_breadcrumbs_entity_base_field_info(EntityTypeInterface $entity
       ->setDisplayConfigurable('view', TRUE)
       ->setDisplayOptions('view', [
         'label' => 'hidden',
+        'region' => 'hidden',
         'weight' => -5,
       ]);
   }
diff --git a/src/Field/ComputedBreadcrumbsItemList.php b/src/Field/ComputedBreadcrumbsItemList.php
index 6bc2860..128cad6 100644
--- a/src/Field/ComputedBreadcrumbsItemList.php
+++ b/src/Field/ComputedBreadcrumbsItemList.php
@@ -26,7 +26,7 @@ class ComputedBreadcrumbsItemList extends FieldItemList {
     $requestStack = \Drupal::service('request_stack');
 
     $parent = $this->getEntity();
-    if ($parent->isNew()) {
+    if ($parent->isNew() || !$parent->hasLinkTemplate('canonical')) {
       return;
     }
     $url = $parent->toUrl();
@@ -65,9 +65,13 @@ class ComputedBreadcrumbsItemList extends FieldItemList {
           if (empty($uri)) {
             $uri = 'internal:#';
           }
+          $title = $link->getText();
+          if (is_array($title)) {
+            $title = \Drupal::service('renderer')->render($title);
+          }
           $items[] = [
             'uri' => $uri,
-            'title' => $link->getText(),
+            'title' => $title,
           ];
         }
       });
diff --git a/tests/src/Kernel/ComputedBreadcrumbsKernelTest.php b/tests/src/Kernel/ComputedBreadcrumbsKernelTest.php
index 8677c0b..57cf631 100644
--- a/tests/src/Kernel/ComputedBreadcrumbsKernelTest.php
+++ b/tests/src/Kernel/ComputedBreadcrumbsKernelTest.php
@@ -8,6 +8,8 @@ use Drupal\Core\Url;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\node\Entity\Node;
 use Drupal\node\Entity\NodeType;
+use Drupal\taxonomy\Entity\Term;
+use Drupal\taxonomy\Entity\Vocabulary;
 use Prophecy\Argument;
 use Prophecy\PhpUnit\ProphecyTrait;
 
@@ -24,10 +26,17 @@ class ComputedBreadcrumbsKernelTest extends EntityKernelTestBase {
    *
    * @var array
    */
-  protected static $modules = ['node', 'computed_breadcrumbs'];
+  protected static $modules = [
+    'computed_breadcrumbs',
+    'link',
+    'node',
+    'taxonomy',
+  ];
 
   /**
    * Set the default field storage backend for fields created during tests.
+   *
+   * @throws \Drupal\Core\Entity\EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
@@ -36,8 +45,14 @@ class ComputedBreadcrumbsKernelTest extends EntityKernelTestBase {
     $this->container->get('current_user')->setAccount($account);
 
     // Create a node type for testing.
-    $type = NodeType::create(['type' => 'page', 'name' => 'page']);
-    $type->save();
+    $nodeType = NodeType::create(['type' => 'page', 'name' => 'page']);
+    $nodeType->save();
+
+    // Create a vocabulary for testing.
+    $this->installEntitySchema('taxonomy_term');
+
+    $vocabulary = Vocabulary::create(['name' => 'tags', 'vid' => 'tags']);
+    $vocabulary->save();
 
     $breadcrumbManager = $this->prophesize('Drupal\Core\Breadcrumb\BreadcrumbManager');
 
@@ -48,15 +63,20 @@ class ComputedBreadcrumbsKernelTest extends EntityKernelTestBase {
         if ($routeMatch->getRouteName() == 'entity.node.canonical') {
           $breadcrumb->addLink(new Link('Test breadcrumb', Url::fromUserInput('/breadcrumbs-test')));
         }
+        if ($routeMatch->getRouteName() == 'entity.taxonomy_term.canonical') {
+          $breadcrumb->addLink(new Link('Test breadcrumb', Url::fromUserInput('/breadcrumbs-test')));
+        }
         return $breadcrumb;
       });
     $this->container->set('breadcrumb', $breadcrumbManager->reveal());
   }
 
   /**
-   * Tests the computed breadcrumbs field.
+   * Tests the computed breadcrumbs field on a node.
+   *
+   * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function testComputedBreadcrumbs() {
+  public function testComputedBreadcrumbsNode() {
     $node = Node::create(['type' => 'page', 'title' => 'test', 'uid' => 1]);
     $node->save();
     $breadcrumbs = $node->get('breadcrumbs')->getValue();
@@ -64,4 +84,17 @@ class ComputedBreadcrumbsKernelTest extends EntityKernelTestBase {
     $this->assertEquals('Test breadcrumb', $breadcrumbs[0]['title']);
   }
 
+  /**
+   * Tests the computed breadcrumbs field on a taxonomy term.
+   *
+   * @throws \Drupal\Core\Entity\EntityStorageException
+   */
+  public function testComputedBreadcrumbsTerm() {
+    $term = Term::create(['vid' => 'tags', 'name' => 'test term', 'tid' => 1]);
+    $term->save();
+    $breadcrumbs = $term->get('breadcrumbs')->getValue();
+    $this->assertEquals(1, count($breadcrumbs));
+    $this->assertEquals('Test breadcrumb', $breadcrumbs[0]['title']);
+  }
+
 }
