<?php

use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;

const PRISONER_CONTENT_HUB_PROFILE_BATCH_LIMIT = 20;

/**
 * Remove all moj_hub_item content, so that the content type can be removed.
 */
function prisoner_content_hub_profile_update_8001() {
  $query = \Drupal::entityQuery('node');
  $query->condition('type', 'moj_hub_item');
  $query->accessCheck(FALSE);
  $result = $query->execute();
  $nodes = Node::loadMultiple($result);
  foreach ($nodes as $node) {
    $node->delete();
  }
}

/**
 * Update content assigned to youth female.
 */
function prisoner_content_hub_profile_update_8010(&$sandbox) {

  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $query = \Drupal::entityQuery('node');
    // Get all nodes tagged with "Youth female".
    $query->condition('field_prison_categories', 1013);
    $query->accessCheck(FALSE);
    $sandbox['result'] = $query->execute();
  }

  $nodes = Node::loadMultiple(array_slice($sandbox['result'], $sandbox['progress'], 100, TRUE));

  foreach ($nodes as $node) {
    /** @var \Drupal\node\NodeInterface $node */
    $current_prison_categories = $node->get('field_prison_categories')->getValue();
    $new_prison_categories = [];
    $has_adult_female = FALSE;
    foreach ($current_prison_categories as $key => $value) {
      if ($value['target_id'] != 1013) {
        $new_prison_categories[] = $value;
      }
      if ($value['target_id'] == 1012) {
        $has_adult_female = TRUE;
      }
    }
    // Ensure that Adult female is tagged.
    if (!$has_adult_female) {
      $new_prison_categories[] = ['target_id' => 1012];
    }

    $node->set('field_prison_categories', $new_prison_categories);
    $node->save();
    $sandbox['progress']++;
  }
  $sandbox['#finished'] = $sandbox['progress'] >= count($sandbox['result']);
  return 'Processed nodes: ' . $sandbox['progress'];
}

/**
 * Update terms assigned to youth female.
 */
function prisoner_content_hub_profile_update_8012(&$sandbox) {

  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $query = \Drupal::entityQuery('taxonomy_term');
    // Get all nodes tagged with "Youth female".
    $query->condition('field_prison_categories', 1013);
    $query->accessCheck(FALSE);
    $sandbox['result'] = $query->execute();
  }

  $terms = Term::loadMultiple(array_slice($sandbox['result'], $sandbox['progress'], PRISONER_CONTENT_HUB_PROFILE_BATCH_LIMIT, TRUE));

  foreach ($terms as $term) {
    /** @var \Drupal\taxonomy\TermInterface $term */
    $current_prison_categories = $term->get('field_prison_categories')->getValue();
    $new_prison_categories = [];
    $has_adult_female = FALSE;
    foreach ($current_prison_categories as $key => $value) {
      if ($value['target_id'] != 1013) {
        $new_prison_categories[] = $value;
      }
      if ($value['target_id'] == 1012) {
        $has_adult_female = TRUE;
      }
    }
    // Ensure that Adult female is tagged.
    if (!$has_adult_female) {
      $new_prison_categories[] = ['target_id' => 1012];
    }

    $term->set('field_prison_categories', $new_prison_categories);
    $term->save();
    $sandbox['progress']++;
  }
  $sandbox['#finished'] = $sandbox['progress'] >= count($sandbox['result']);
  return 'Processed terms: ' . $sandbox['progress'];
}

/**
 * Update missing file usage db records.
 *
 * See https://trello.com/c/TQHhdb4i/151-unable-to-edit-certain-videos-in-drupal
 */
function prisoner_content_hub_profile_update_8013() {
  /** @var \Drupal\file\FileUsage\FileUsageInterface $file_usage */
  $file_usage = Drupal::service('file.usage');

  // Find all field_video entries that do not have an entry in the file_usage table.
  //
  // We can't use an entity query here, as we need to use a specific
  // LEFT join to bring in the missing entries.
  $query = Drupal::database()->select('node__field_video', 'nfu');
  $query->addField('nfu', 'entity_id');
  $query->addField('nfu', 'field_video_target_id');
  $query->addJoin('LEFT OUTER', 'file_usage', 'fu', 'nfu.field_video_target_id = fu.fid');
  $query->where('fu.fid IS NULL');
  $result = $query->execute()->fetchAll();
  foreach ($result as $row) {
    $file = \Drupal\file\Entity\File::load($row->field_video_target_id);
    $file_usage->add($file, 'file', 'node', $row->entity_id);
  }
}

/**
 * Update content assigned with more than one series, to be part of just one
 * series.
 */
function prisoner_content_hub_profile_update_8014() {
  $query = \Drupal::entityQuery('node')->condition('field_moj_series.%delta', 0, '>')->accessCheck(FALSE);
  $results = $query->execute();
  $nodes = Node::loadMultiple($results);
  /** @var \Drupal\node\NodeInterface $node */
  foreach ($nodes as $node) {
    $field_value = $node->get('field_moj_series')->get(0)->getValue();
    $node->set('field_moj_series', $field_value);
    $node->save();
  }
}
