<?php

/**
 * @file
 * Contains prisoner_hub_edit_only.module.
 */

use Drupal\Core\Entity\ContentEntityForm;
use Drupal\Core\Entity\EntityFormInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_local_tasks_alter().
 *
 * Replace the "View" with the "Edit" tab.
 *
 * @todo Re-instate the view tab, and point the url to frontend prison sites.
 * Ensure that EntityViewOverride::$excludedContentTypes are excluded.
 */
function prisoner_hub_edit_only_local_tasks_alter(&$local_tasks) {
  // We only work with nodes for now.
  $entity_types = ['node'];
  foreach ($entity_types as $entity_type) {
    $local_tasks['entity.' . $entity_type . '.canonical']['title'] = 'Edit';
    $local_tasks['entity.' . $entity_type . '.canonical']['route_name'] = 'entity.' . $entity_type . '.edit_form';
    unset($local_tasks['entity.' . $entity_type . '.edit_form']);
  }
}

/**
 * Implements hook_form_alter().
 *
 * The node submit handler adds in a redirect to the view page.  This is now
 * unnecessary as it will just redirect back to the edit page.  This form alter
 * removes the redirect.
 */
function prisoner_hub_edit_only_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();
  if ($form_object instanceof EntityFormInterface) {
    $entity = $form_object->getEntity();
    if ($entity->getEntityTypeId() == 'node' && $form_object instanceof ContentEntityForm) {
      $form['actions']['submit']['#submit'][] = 'prisoner_hub_edit_only_form_submit';
    }
  }
}

/**
 * Submit handler for node edit forms.
 */
function prisoner_hub_edit_only_form_submit(&$form, FormStateInterface $form_state) {
  // Only modify the redirect if there is none specified in the url.
  if (empty(\Drupal::request()->query->get('destination'))) {
    // Redirect back to the edit form (which would happen anyway as the default
    // behaviour is to redirect to the canonical "view" page of the entity,
    // which we are already redirecting to the edit form.  However, this skips
    // the additional request).
    //
    // But why are we redirecting to the same page the user is on?
    // Because this ensures the form is properly rebuilt, retrieving all the
    // correct values.  This includes things such as the changed time, and also
    // any modified values by alter hooks etc.
    $entity = $form_state->getFormObject()->getEntity();
    $form_state->setRedirectUrl($entity->toUrl('edit-form'));
  }
}
