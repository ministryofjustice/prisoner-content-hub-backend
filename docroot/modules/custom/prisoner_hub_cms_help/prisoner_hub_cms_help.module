<?php

/**
 * @file
 * Contains prisoner_hub_cms_help.module.
 */

use Drupal\Component\Render\HtmlEscapedText;
use Drupal\Core\Url;
use Drupal\node\NodeInterface;

/**
 * Implements hook_entity_view_alter().
 *
 * Hide the default book navigation, as we are using our own via a block.
 */
function prisoner_hub_cms_help_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  if (isset($build['book_navigation'])) {
    hide($build['book_navigation']);
  }
}

/**
 * Implements hook_preprocess_menu().
 *
 * Add a css class to the cms guide menu button to give it the help icon.
 */
function prisoner_hub_cms_help_preprocess_menu(&$variables) {
  static $book_urls = [];
  if (empty($book_urls)) {
    /** @var \Drupal\book\BookManagerInterface $book_manager */
    $book_manager = \Drupal::service('book.manager');
    $books = $book_manager->getAllBooks();
    foreach ($books as $book) {
      if ($book['url'] instanceof Url) {
        $book_urls[] = $book['url']->toUriString();
      }
    }
  }

  foreach ($variables['items'] as $key => $item) {
    /** @var \Drupal\Core\Menu\MenuLinkDefault $menu_link */
    $menu_link = isset($item['original_link']) ? $item['original_link'] : NULL;
    if ($menu_link && in_array($menu_link->getUrlObject()->toUriString(), $book_urls)) {
      /** @var \Drupal\Core\Url $url */
      $url = $item['url'];
      $attributes = $url->getOption('attributes');
      $attributes['class'][] = 'toolbar-icon toolbar-icon-help-main';
      $url->setOption('attributes', $attributes);
    }
  }
}

/**
 * Implements hook_preprocess_page_title().
 *
 * Hide the default page title when viewing help pages (as we are using
 * layout_manager to place the title within the content).
 */
function prisoner_hub_cms_help_preprocess_page_title(&$vars) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof NodeInterface && $node->getType() == 'help_page' && \Drupal::routeMatch()->getRouteName() == 'entity.node.canonical') {
    $vars['title'] = new HtmlEscapedText('');
  }
}
